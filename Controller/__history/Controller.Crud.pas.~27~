unit Controller.Crud;

interface

uses
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client;

type
  TControllerCrud = class
  private
    FDataSet: TFDQuery;
    procedure Post(ADataSet: TFDQuery); virtual;
    procedure Delete(ADataSet: TFDQuery); virtual;
    procedure Update(ADataSet: TFDQuery); virtual;
  public
    constructor Create(AConexao: TFDConnection);
  end;

implementation

{ TCrud }

constructor TControllerCrud.Create;
begin
  inherited Create;
end;

procedure TControllerCrud.Delete(ADataSet: TFDQuery);
begin
  ADataSet.Delete;
end;

procedure TControllerCrud.Post(ADataSet: TFDQuery);
begin
  ADataSet.Post;
end;

procedure TControllerCrud.Update(ADataSet: TFDQuery);
begin
  ADataSet.Post;
end;

end.
