unit Marca;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Controller.GenericCrud, Register.Marca,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Controller.Connection;

type
  TunMarca = class(TForm)
    Edit1: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Button1: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    class function ShowForm: Boolean;
  end;

var
  unMarca: TunMarca;

implementation

{$R *.dfm}
{ TunMarca }

procedure TunMarca.Button1Click(Sender: TObject);
var
  vMarcaGeneric: TControllerGenericCrud<TRegisterMarca>;
  vMarca: TRegisterMarca;
begin
  vMarcaGeneric := TControllerGenericCrud<TRegisterMarca>.Create
    (TConnection.New.SetConnection, 'MARCA');

  vMarca := TRegisterMarca.Create;
  try
    vMarca.FID_MARCA := StrToInt(Edit1.Text);
    vMarca.Nome := Edit2.Text;
    vMarcaGeneric.Insert(vMarca);
  finally
    vMarca.Free;
  end;
end;

procedure TunMarca.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  ModalResult := mrOk;
end;

class function TunMarca.ShowForm: Boolean;
var
  vForm: TunMarca;
begin
  Result := False;
  vForm := TunMarca.Create(Application);
  try
    if vForm.ShowModal = mrOk then
      Result := True;
  finally
    vForm.Free;
  end;
end;

end.
